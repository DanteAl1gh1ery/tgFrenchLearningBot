
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, CallbackQuery
from aiogram import F , Router, types
from dotenv import load_dotenv
from aiogram.utils.keyboard import InlineKeyboardBuilder

router = Router()



@router.message(CommandStart())
async def command_start_handler(message: Message) -> None:
    await message.answer(f"–ü—Ä–∏–≤—ñ—Ç,  {message.from_user.full_name}! –Ø –±–æ—Ç —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –¥–ª—è –¥–æ–ø–æ–º–æ–≥–∏ –≤–∏–≤—á–µ–Ω–Ω—è –≤–∞–∫–∞–±—É–ª—è—Ä—É" )

    #Buttons 
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="üìö –ü–æ—á–∞—Ç–∏ –Ω–æ–≤—É –º–æ–≤—É",
        callback_data="start_new_language"
    ))
    builder.add(types.InlineKeyboardButton(
        text="üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç–∏ –ø–æ–ø–µ—Ä–µ–¥–Ω—é",
        callback_data="repeat_language"
    ))
    builder.adjust(1)

    await message.answer(
        "–ü–æ—á–Ω–µ–º–æ –∑ –≤–∏–≤—á–µ–Ω–Ω—è –º–æ–≤–∏ —á–∏ –∑ –ø–æ–≤—Ç–æ—Ä–µ–Ω–Ω—è?",
        reply_markup=builder.as_markup()
    )

#Hendlers
@router.callback_query(F.data.in_(["start_new_language", "repeat_language"]))
async def process_language_choise(callback: CallbackQuery):
    if callback.data == "start_new_language":
        response_text = "–ß—É–¥–æ–≤–æ –ø–æ—á–Ω–µ–º–æ –≤–∏–≤—á–µ–Ω–Ω—è –Ω–æ–≤–æ—ó –º–æ–≤–∏!"
    if callback.data == "repeat_language":
        response_text = "–î–æ–±—Ä–µ, –¥–∞–≤–∞–π –ø–æ–≤—Ç–æ—Ä–∏–º–æ!"

    await callback.message.edit_text(response_text)
    await callback.answer()
